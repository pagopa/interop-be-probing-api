name: "CI"

on:
  push:
    branches:
      - '**'
      - '!main'
      - '!master'
    paths:
      - '*'
      - '.github/workflows/*.yaml'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      environment:
        description: 'Which environment to update.'
        type: choice
        required: true
        default: dev
        options:
        - dev
        - uat

jobs:
  manual-build:
    if: "${{ github.event_name == 'workflow_dispatch' }}"
    name: "build-push"
    runs-on: ubuntu-latest
    continue-on-error: false
    permissions:
      id-token: write
      contents: read
    environment: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: |
              docker build . --tag ghcr.io/${{ github.event.repository.name }}:latest
              docker push ghcr.io/${{ github.event.repository.name }}:latest

  merge-build:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    name: "build-push"
    runs-on: ubuntu-latest
    continue-on-error: false
    permissions:
      id-token: write  
      contents: read
    environment: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build 
        run: |
              docker build . --tag ghcr.io/${{ github.event.repository.name }}:latest
              docker push ghcr.io/${{ github.event.repository.name }}:latest
  build-and-push-image:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}